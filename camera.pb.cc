// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: camera.proto
// Protobuf C++ Version: 5.27.2

#include "camera.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace camera {

inline constexpr CameraFrame::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : slave_image_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        width_{0u},
        height_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CameraFrame::CameraFrame(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CameraFrameDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CameraFrameDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CameraFrameDefaultTypeInternal() {}
  union {
    CameraFrame _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CameraFrameDefaultTypeInternal _CameraFrame_default_instance_;
}  // namespace camera
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_camera_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_camera_2eproto = nullptr;
const ::uint32_t
    TableStruct_camera_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::camera::CameraFrame, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::camera::CameraFrame, _impl_.slave_image_),
        PROTOBUF_FIELD_OFFSET(::camera::CameraFrame, _impl_.width_),
        PROTOBUF_FIELD_OFFSET(::camera::CameraFrame, _impl_.height_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::camera::CameraFrame)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::camera::_CameraFrame_default_instance_._instance,
};
const char descriptor_table_protodef_camera_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014camera.proto\022\006camera\032\033google/protobuf/"
    "empty.proto\"A\n\013CameraFrame\022\023\n\013slave_imag"
    "e\030\001 \001(\014\022\r\n\005width\030\002 \001(\r\022\016\n\006height\030\003 \001(\r2N"
    "\n\rCameraService\022=\n\014StreamFrames\022\026.google"
    ".protobuf.Empty\032\023.camera.CameraFrame0\001b\006"
    "proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_camera_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::absl::once_flag descriptor_table_camera_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_camera_2eproto = {
    false,
    false,
    206,
    descriptor_table_protodef_camera_2eproto,
    "camera.proto",
    &descriptor_table_camera_2eproto_once,
    descriptor_table_camera_2eproto_deps,
    1,
    1,
    schemas,
    file_default_instances,
    TableStruct_camera_2eproto::offsets,
    file_level_enum_descriptors_camera_2eproto,
    file_level_service_descriptors_camera_2eproto,
};
namespace camera {
// ===================================================================

class CameraFrame::_Internal {
 public:
};

CameraFrame::CameraFrame(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:camera.CameraFrame)
}
inline PROTOBUF_NDEBUG_INLINE CameraFrame::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::camera::CameraFrame& from_msg)
      : slave_image_(arena, from.slave_image_),
        _cached_size_{0} {}

CameraFrame::CameraFrame(
    ::google::protobuf::Arena* arena,
    const CameraFrame& from)
    : ::google::protobuf::Message(arena) {
  CameraFrame* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, width_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, width_),
           offsetof(Impl_, height_) -
               offsetof(Impl_, width_) +
               sizeof(Impl_::height_));

  // @@protoc_insertion_point(copy_constructor:camera.CameraFrame)
}
inline PROTOBUF_NDEBUG_INLINE CameraFrame::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : slave_image_(arena),
        _cached_size_{0} {}

inline void CameraFrame::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, width_),
           0,
           offsetof(Impl_, height_) -
               offsetof(Impl_, width_) +
               sizeof(Impl_::height_));
}
CameraFrame::~CameraFrame() {
  // @@protoc_insertion_point(destructor:camera.CameraFrame)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CameraFrame::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.slave_image_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CameraFrame::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CameraFrame, _impl_._cached_size_),
              false,
          },
          &CameraFrame::MergeImpl,
          &CameraFrame::kDescriptorMethods,
          &descriptor_table_camera_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> CameraFrame::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CameraFrame_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::camera::CameraFrame>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes slave_image = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CameraFrame, _impl_.slave_image_)}},
    // uint32 width = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CameraFrame, _impl_.width_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(CameraFrame, _impl_.width_)}},
    // uint32 height = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CameraFrame, _impl_.height_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(CameraFrame, _impl_.height_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes slave_image = 1;
    {PROTOBUF_FIELD_OFFSET(CameraFrame, _impl_.slave_image_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint32 width = 2;
    {PROTOBUF_FIELD_OFFSET(CameraFrame, _impl_.width_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 height = 3;
    {PROTOBUF_FIELD_OFFSET(CameraFrame, _impl_.height_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CameraFrame::Clear() {
// @@protoc_insertion_point(message_clear_start:camera.CameraFrame)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.slave_image_.ClearToEmpty();
  ::memset(&_impl_.width_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.height_) -
      reinterpret_cast<char*>(&_impl_.width_)) + sizeof(_impl_.height_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CameraFrame::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:camera.CameraFrame)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes slave_image = 1;
  if (!this->_internal_slave_image().empty()) {
    const std::string& _s = this->_internal_slave_image();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // uint32 width = 2;
  if (this->_internal_width() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_width(), target);
  }

  // uint32 height = 3;
  if (this->_internal_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:camera.CameraFrame)
  return target;
}

::size_t CameraFrame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:camera.CameraFrame)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // bytes slave_image = 1;
  if (!this->_internal_slave_image().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_slave_image());
  }

  // uint32 width = 2;
  if (this->_internal_width() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_width());
  }

  // uint32 height = 3;
  if (this->_internal_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CameraFrame::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CameraFrame*>(&to_msg);
  auto& from = static_cast<const CameraFrame&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:camera.CameraFrame)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_slave_image().empty()) {
    _this->_internal_set_slave_image(from._internal_slave_image());
  }
  if (from._internal_width() != 0) {
    _this->_impl_.width_ = from._impl_.width_;
  }
  if (from._internal_height() != 0) {
    _this->_impl_.height_ = from._impl_.height_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CameraFrame::CopyFrom(const CameraFrame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:camera.CameraFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CameraFrame::InternalSwap(CameraFrame* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.slave_image_, &other->_impl_.slave_image_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CameraFrame, _impl_.height_)
      + sizeof(CameraFrame::_impl_.height_)
      - PROTOBUF_FIELD_OFFSET(CameraFrame, _impl_.width_)>(
          reinterpret_cast<char*>(&_impl_.width_),
          reinterpret_cast<char*>(&other->_impl_.width_));
}

::google::protobuf::Metadata CameraFrame::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace camera
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_camera_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
